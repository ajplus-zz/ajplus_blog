import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,d as r}from"./app-34010d88.js";const c={},t=r('<p>队列 (Queue) 是一种操作受限的线性表，遵循<code>先进先出（FIFO）</code>的原则;</p><p>Ⓜ️</p><p>应用场景：</p><ul><li>任务调度：例如，在多线程环境中，线程可能需要等待某个资源，它们可以将自己的标识放入一个队列中，直到资源变得可用；</li><li>消息传递：在消息队列系统中，消息会被放入队列中，然后由消费者按照顺序取出并处理；</li><li>缓冲处理：在处理输入/输出操作时，数据会被暂存于队列中，直到处理器准备好处理这些数据；</li><li>浏览器缓存：网页的加载有时候是异步的，浏览器可能会将需要加载的资源放入一个队列中，按部就班地请求和加载；</li></ul><p>🚀进队、出队、循环队列</p><h3 id="循环队列" tabindex="-1"><a class="header-anchor" href="#循环队列" aria-hidden="true">#</a> 循环队列</h3><p>🚀</p><p>Ⓜ️</p><h3 id="链式队列" tabindex="-1"><a class="header-anchor" href="#链式队列" aria-hidden="true">#</a> 链式队列</h3><p>🚀</p><p>Ⓜ️</p><h3 id="双端队列" tabindex="-1"><a class="header-anchor" href="#双端队列" aria-hidden="true">#</a> 双端队列</h3><p>🚀</p><p>Ⓜ️</p>',14),d=[t];function h(p,o){return a(),i("div",null,d)}const s=e(c,[["render",h],["__file","ch2.html.vue"]]);export{s as default};
