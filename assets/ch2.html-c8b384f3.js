const t=JSON.parse('{"key":"v-43335c96","path":"/code_note/java/01_base/ch2.html","title":"2）关键字","lang":"zh-CN","frontmatter":{"icon":"markdown","title":"2）关键字","category":["java"],"tag":["basic"],"description":"this与super this修饰的变量用于指代成员变量，其主要作用：解决局部变量和成员变量的重名问题； 在子类中需要访问父类中非私有成员变量时，使用super 关键字，修饰父类成员变量，类似于 this ； 在类的继承中，子类的构造方法中默认会有super()语句存在，相当于执行父类的相应构造方法中的语句； static 好处：提高效率与易用性，无需实例即可调用，特别适合无状态逻辑处理；","head":[["meta",{"property":"og:url","content":"https://ajplus.cn/code_note/java/01_base/ch2.html"}],["meta",{"property":"og:title","content":"2）关键字"}],["meta",{"property":"og:description","content":"this与super this修饰的变量用于指代成员变量，其主要作用：解决局部变量和成员变量的重名问题； 在子类中需要访问父类中非私有成员变量时，使用super 关键字，修饰父类成员变量，类似于 this ； 在类的继承中，子类的构造方法中默认会有super()语句存在，相当于执行父类的相应构造方法中的语句； static 好处：提高效率与易用性，无需实例即可调用，特别适合无状态逻辑处理；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ajplus"}],["meta",{"property":"article:tag","content":"basic"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2）关键字\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ajplus\\",\\"url\\":\\"https://github.com/ajplus-zz/\\",\\"email\\":\\"ajplusdd@gmail.com\\"}]}"]]},"headers":[{"level":3,"title":"this与super","slug":"this与super","link":"#this与super","children":[]},{"level":3,"title":"static","slug":"static","link":"#static","children":[]},{"level":3,"title":"final","slug":"final","link":"#final","children":[]}],"git":{},"readingTime":{"minutes":1.82,"words":547},"filePathRelative":"code_note/java/01_base/ch2.md","excerpt":"<h3> this与super</h3>\\n<ul>\\n<li>\\n<p><code>this</code>修饰的变量用于指代成员变量，其主要作用：解决局部变量和成员变量的重名问题；</p>\\n</li>\\n<li>\\n<p>在子类中需要访问父类中非私有成员变量时，使用<code>super</code> 关键字，修饰父类成员变量，类似于 <code>this</code> ；</p>\\n</li>\\n</ul>\\n<p>在类的继承中，子类的构造方法中默认会有<code>super()</code>语句存在，相当于执行父类的相应构造方法中的语句；</p>\\n<h3> static</h3>\\n<p>好处：提高效率与易用性，无需实例即可调用，特别适合无状态逻辑处理；</p>","autoDesc":true}');export{t as data};
