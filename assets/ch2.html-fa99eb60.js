const t=JSON.parse('{"key":"v-fb5db4c6","path":"/postgraduate/DS_SF/03_sqa/ch2.html","title":"队列","lang":"zh-CN","frontmatter":{"title":"队列","icon":"edit","category":["数据结构"],"tag":["队列"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"队列 (Queue) 是一种操作受限的线性表，遵循先进先出（FIFO）的原则; Ⓜ️ 应用场景： 任务调度：例如，在多线程环境中，线程可能需要等待某个资源，它们可以将自己的标识放入一个队列中，直到资源变得可用； 消息传递：在消息队列系统中，消息会被放入队列中，然后由消费者按照顺序取出并处理； 缓冲处理：在处理输入/输出操作时，数据会被暂存于队列中，直到处理器准备好处理这些数据； 浏览器缓存：网页的加载有时候是异步的，浏览器可能会将需要加载的资源放入一个队列中，按部就班地请求和加载；","head":[["meta",{"property":"og:url","content":"https://ajplus.cn/postgraduate/DS_SF/03_sqa/ch2.html"}],["meta",{"property":"og:title","content":"队列"}],["meta",{"property":"og:description","content":"队列 (Queue) 是一种操作受限的线性表，遵循先进先出（FIFO）的原则; Ⓜ️ 应用场景： 任务调度：例如，在多线程环境中，线程可能需要等待某个资源，它们可以将自己的标识放入一个队列中，直到资源变得可用； 消息传递：在消息队列系统中，消息会被放入队列中，然后由消费者按照顺序取出并处理； 缓冲处理：在处理输入/输出操作时，数据会被暂存于队列中，直到处理器准备好处理这些数据； 浏览器缓存：网页的加载有时候是异步的，浏览器可能会将需要加载的资源放入一个队列中，按部就班地请求和加载；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ajplus"}],["meta",{"property":"article:tag","content":"队列"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"队列\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ajplus\\",\\"url\\":\\"https://github.com/ajplus-zz/\\",\\"email\\":\\"ajplusdd@gmail.com\\"}]}"]]},"headers":[{"level":3,"title":"循环队列","slug":"循环队列","link":"#循环队列","children":[]},{"level":3,"title":"链式队列","slug":"链式队列","link":"#链式队列","children":[]},{"level":3,"title":"双端队列","slug":"双端队列","link":"#双端队列","children":[]}],"git":{},"readingTime":{"minutes":1.07,"words":321},"filePathRelative":"postgraduate/DS_SF/03_sqa/ch2.md","excerpt":"<p>队列 (Queue) 是一种操作受限的线性表，遵循<code>先进先出（FIFO）</code>的原则;</p>\\n<p>Ⓜ️</p>\\n<p>应用场景：</p>\\n<ul>\\n<li>任务调度：例如，在多线程环境中，线程可能需要等待某个资源，它们可以将自己的标识放入一个队列中，直到资源变得可用；</li>\\n<li>消息传递：在消息队列系统中，消息会被放入队列中，然后由消费者按照顺序取出并处理；</li>\\n<li>缓冲处理：在处理输入/输出操作时，数据会被暂存于队列中，直到处理器准备好处理这些数据；</li>\\n<li>浏览器缓存：网页的加载有时候是异步的，浏览器可能会将需要加载的资源放入一个队列中，按部就班地请求和加载；</li>\\n</ul>","autoDesc":true}');export{t as data};
