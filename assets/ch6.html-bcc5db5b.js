const t=JSON.parse('{"key":"v-358c979e","path":"/code_note/java/01_base/ch6.html","title":"6）内部类","lang":"zh-CN","frontmatter":{"icon":"markdown","title":"6）内部类","date":"2023-07-22T00:00:00.000Z","category":["java"],"tag":["inner_class"],"description":"将一个类A定义在另一个类B里面，里面的那个类A就称为内部类，B则称为外部类；可以把内部类理解成寄生，外部类理解成宿主；其目的是为了实现更好的封装性； eg：一个事物内部还有一个独立的事物，内部的事物脱离外部的事物无法独立使用 人有一颗心脏； 汽车内部有一个发动机； 成员内部类，类定义在了成员位置(类中方法外称为成员位置，无static修饰的内部类)； 静态内部类，类定义在了成员位置(类中方法外称为成员位置，有static修饰的内部类)；","head":[["meta",{"property":"og:url","content":"https://ajplus.cn/code_note/java/01_base/ch6.html"}],["meta",{"property":"og:title","content":"6）内部类"}],["meta",{"property":"og:description","content":"将一个类A定义在另一个类B里面，里面的那个类A就称为内部类，B则称为外部类；可以把内部类理解成寄生，外部类理解成宿主；其目的是为了实现更好的封装性； eg：一个事物内部还有一个独立的事物，内部的事物脱离外部的事物无法独立使用 人有一颗心脏； 汽车内部有一个发动机； 成员内部类，类定义在了成员位置(类中方法外称为成员位置，无static修饰的内部类)； 静态内部类，类定义在了成员位置(类中方法外称为成员位置，有static修饰的内部类)；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ajplus"}],["meta",{"property":"article:tag","content":"inner_class"}],["meta",{"property":"article:published_time","content":"2023-07-22T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"6）内部类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-22T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ajplus\\",\\"url\\":\\"https://github.com/ajplus-zz/\\",\\"email\\":\\"ajplusdd@gmail.com\\"}]}"]]},"headers":[{"level":3,"title":"成员内部类","slug":"成员内部类","link":"#成员内部类","children":[]},{"level":3,"title":"静态内部类","slug":"静态内部类","link":"#静态内部类","children":[]},{"level":3,"title":"局部内部类","slug":"局部内部类","link":"#局部内部类","children":[]},{"level":3,"title":"匿名内部类","slug":"匿名内部类","link":"#匿名内部类","children":[]}],"git":{},"readingTime":{"minutes":3.56,"words":1069},"filePathRelative":"code_note/java/01_base/ch6.md","localizedDate":"2023年7月22日","excerpt":"<p>将一个类A定义在另一个类B里面，里面的那个类A就称为内部类，B则称为外部类；可以把内部类理解成寄生，外部类理解成宿主；其目的是为了实现更好的封装性；</p>\\n<p>eg：一个事物内部还有一个独立的事物，内部的事物脱离外部的事物无法独立使用</p>\\n<blockquote>\\n<p>人有一颗心脏；</p>\\n<p>汽车内部有一个发动机；</p>\\n</blockquote>\\n<p><strong>成员内部类</strong>，类定义在了成员位置(类中方法外称为成员位置，无static修饰的内部类)；</p>\\n<p><strong>静态内部类</strong>，类定义在了成员位置(类中方法外称为成员位置，有static修饰的内部类)；</p>","autoDesc":true}');export{t as data};
