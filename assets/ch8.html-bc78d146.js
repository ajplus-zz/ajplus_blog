const t=JSON.parse('{"key":"v-2eb93522","path":"/code_note/java/01_base/ch8.html","title":"8）jvm与tomcat","lang":"zh-CN","frontmatter":{"icon":"markdown","title":"8）jvm与tomcat","category":["java"],"tag":["basic"],"description":"JVM：Java程序的运行环境，管理线程的整个生命周期，包括创建、调度、同步和销毁，适用于Tomcat上的Web应用等；它内置线程调度器，根据系统策略分配CPU时间给线程；操作系统主要提供基本的资源分配，如内存、CPU时间片等，而不直接干涉到jvm内部； Tomcat：一个Java应用服务器，专注于处理HTTP请求、Web应用管理和Servlet/JSP运行；它虽自行创建线程处理任务如监听和调度，但实际上依赖JVM进行线程管理，从而在更高层面上实现了对并发请求的有效处理和资源调度； 简而言之，JVM是线程管理的底层基础设施，而Tomcat则是在JVM之上，利用这些基础设施来实现Web应用的并发处理和任务调度；","head":[["meta",{"property":"og:url","content":"https://ajplus.cn/code_note/java/01_base/ch8.html"}],["meta",{"property":"og:title","content":"8）jvm与tomcat"}],["meta",{"property":"og:description","content":"JVM：Java程序的运行环境，管理线程的整个生命周期，包括创建、调度、同步和销毁，适用于Tomcat上的Web应用等；它内置线程调度器，根据系统策略分配CPU时间给线程；操作系统主要提供基本的资源分配，如内存、CPU时间片等，而不直接干涉到jvm内部； Tomcat：一个Java应用服务器，专注于处理HTTP请求、Web应用管理和Servlet/JSP运行；它虽自行创建线程处理任务如监听和调度，但实际上依赖JVM进行线程管理，从而在更高层面上实现了对并发请求的有效处理和资源调度； 简而言之，JVM是线程管理的底层基础设施，而Tomcat则是在JVM之上，利用这些基础设施来实现Web应用的并发处理和任务调度；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ajplus"}],["meta",{"property":"article:tag","content":"basic"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8）jvm与tomcat\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ajplus\\",\\"url\\":\\"https://github.com/ajplus-zz/\\",\\"email\\":\\"ajplusdd@gmail.com\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":1.24,"words":372},"filePathRelative":"code_note/java/01_base/ch8.md","excerpt":"<p><code>JVM</code>：Java程序的运行环境，管理线程的整个生命周期，包括创建、调度、同步和销毁，适用于Tomcat上的Web应用等；它内置线程调度器，根据系统策略分配CPU时间给线程；操作系统主要提供基本的资源分配，如内存、CPU时间片等，而不直接干涉到<code>jvm</code>内部；</p>\\n<p><code>Tomcat</code>：一个Java应用服务器，专注于处理HTTP请求、Web应用管理和Servlet/JSP运行；它虽自行创建线程处理任务如监听和调度，但实际上依赖JVM进行线程管理，从而在更高层面上实现了对并发请求的有效处理和资源调度；</p>\\n<p>简而言之，JVM是线程管理的底层基础设施，而Tomcat则是在JVM之上，利用这些基础设施来实现Web应用的并发处理和任务调度；</p>","autoDesc":true}');export{t as data};
