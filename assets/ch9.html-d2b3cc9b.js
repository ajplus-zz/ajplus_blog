const e=JSON.parse('{"key":"v-2b4f83e4","path":"/code_note/java/01_base/ch9.html","title":"9）面向对象","lang":"zh-CN","frontmatter":{"icon":"markdown","title":"9）面向对象","category":["java"],"tag":["basic"],"description":"面向对象三大特征：封装，继承，多态； 构造方法 构造方法是一种特殊的方法，作用是在创建对象的时候，给成员变量进行初始化；格式如下： public class 类名{ 修饰符 类名(参数) { \\t ... } }","head":[["meta",{"property":"og:url","content":"https://ajplus.cn/code_note/java/01_base/ch9.html"}],["meta",{"property":"og:title","content":"9）面向对象"}],["meta",{"property":"og:description","content":"面向对象三大特征：封装，继承，多态； 构造方法 构造方法是一种特殊的方法，作用是在创建对象的时候，给成员变量进行初始化；格式如下： public class 类名{ 修饰符 类名(参数) { \\t ... } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ajplus"}],["meta",{"property":"article:tag","content":"basic"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9）面向对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ajplus\\",\\"url\\":\\"https://github.com/ajplus-zz/\\",\\"email\\":\\"ajplusdd@gmail.com\\"}]}"]]},"headers":[{"level":3,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":3,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":3,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":3,"title":"多态","slug":"多态","link":"#多态","children":[]}],"git":{},"readingTime":{"minutes":3.63,"words":1090},"filePathRelative":"code_note/java/01_base/ch9.md","excerpt":"<p>面向对象三大特征：<code>封装，继承，多态</code>；</p>\\n<h3> 构造方法</h3>\\n<p>构造方法是一种特殊的方法，作用是在创建对象的时候，给成员变量进行初始化；格式如下：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> 类名<span class=\\"token punctuation\\">{</span>\\n    修饰符 类名<span class=\\"token punctuation\\">(</span>参数<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t  <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
