const t=JSON.parse('{"key":"v-66ae7657","path":"/postgraduate/DS_SF/01_base/","title":"预备知识","lang":"zh-CN","frontmatter":{"title":"预备知识","icon":null,"category":["数据结构"],"tag":["Basic"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"1. 逻辑结构 集合结构：数据元素构成了一个无序且无重复元素的集体；各个数据元素同属于一个集合，但它们之间不存在任何直接关系； 线性结构（又称线性表）：数据元素按照某种线性顺序进行排列，形成一对一的关系链；除首尾元素外，每个数据元素都有一个唯一的前驱和后继； 树形结构：在树形结构中，数据元素组织成一种层次关系，表现为一对多的父子关系；每一个数据元素（称为节点）可能有零个、一个或多个子节点；除根节点外，每个节点都恰好有一个父节点； 图形结构：图形结构的数据元素间形成了一个多对多的关系网，任意两个元素之间都可以存在直接联系；在这种结构中，任意节点可以拥有任意数量的邻接节点，体现了复杂系统中各元素之间的多重并行关联特性；","head":[["meta",{"property":"og:url","content":"https://ajplus.cn/postgraduate/DS_SF/01_base/"}],["meta",{"property":"og:title","content":"预备知识"}],["meta",{"property":"og:description","content":"1. 逻辑结构 集合结构：数据元素构成了一个无序且无重复元素的集体；各个数据元素同属于一个集合，但它们之间不存在任何直接关系； 线性结构（又称线性表）：数据元素按照某种线性顺序进行排列，形成一对一的关系链；除首尾元素外，每个数据元素都有一个唯一的前驱和后继； 树形结构：在树形结构中，数据元素组织成一种层次关系，表现为一对多的父子关系；每一个数据元素（称为节点）可能有零个、一个或多个子节点；除根节点外，每个节点都恰好有一个父节点； 图形结构：图形结构的数据元素间形成了一个多对多的关系网，任意两个元素之间都可以存在直接联系；在这种结构中，任意节点可以拥有任意数量的邻接节点，体现了复杂系统中各元素之间的多重并行关联特性；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ajplus"}],["meta",{"property":"article:tag","content":"Basic"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"预备知识\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ajplus\\",\\"url\\":\\"https://github.com/ajplus-zz/\\",\\"email\\":\\"ajplusdd@gmail.com\\"}]}"]]},"headers":[{"level":3,"title":"1. 逻辑结构","slug":"_1-逻辑结构","link":"#_1-逻辑结构","children":[]},{"level":3,"title":"2. 物理结构","slug":"_2-物理结构","link":"#_2-物理结构","children":[]},{"level":3,"title":"3. 时间复杂度","slug":"_3-时间复杂度","link":"#_3-时间复杂度","children":[]},{"level":3,"title":"4. 空间复杂度","slug":"_4-空间复杂度","link":"#_4-空间复杂度","children":[]}],"git":{},"readingTime":{"minutes":2.6,"words":780},"filePathRelative":"postgraduate/DS_SF/01_base/README.md","excerpt":"<h3> 1. 逻辑结构</h3>\\n<ul>\\n<li>集合结构：数据元素构成了一个无序且无重复元素的集体；各个数据元素同属于一个集合，但它们之间不存在任何直接关系；</li>\\n<li>线性结构（又称线性表）：数据元素按照某种线性顺序进行排列，形成一对一的关系链；除首尾元素外，每个数据元素都有一个唯一的前驱和后继；</li>\\n<li>树形结构：在树形结构中，数据元素组织成一种层次关系，表现为一对多的父子关系；每一个数据元素（称为节点）可能有零个、一个或多个子节点；除根节点外，每个节点都恰好有一个父节点；</li>\\n<li>图形结构：图形结构的数据元素间形成了一个多对多的关系网，任意两个元素之间都可以存在直接联系；在这种结构中，任意节点可以拥有任意数量的邻接节点，体现了复杂系统中各元素之间的多重并行关联特性；</li>\\n</ul>","autoDesc":true}');export{t as data};
