import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as d,c as u,b as a,e as s,a as n,w as t,d as p}from"./app-34010d88.js";const v={},m=a("h3",{id:"_1-finalshell连接",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-finalshell连接","aria-hidden":"true"},"#"),s(),a("strong",null,"1. FinalShell连接")],-1),b={href:"https://www.hostbuf.com/",target:"_blank",rel:"noopener noreferrer"},k=a("br",null,null,-1),g=a("h3",{id:"_2-安装jdk",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-安装jdk","aria-hidden":"true"},"#"),s(),a("strong",null,"2. 安装JDK")],-1),h=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"sudo"),s(" yum "),a("span",{class:"token function"},"install"),s(" java-17-openjdk-devel "),a("span",{class:"token parameter variable"},"-y"),s(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),f={href:"https://www.oracle.com/java/technologies/downloads/#java17",target:"_blank",rel:"noopener noreferrer"},x=a("figure",null,[a("img",{src:"http://manufactory.ajplus.cn/blog/linux/ajplus_linux (21).png",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),_=a("p",null,"2）解压",-1),y=a("div",{class:"language-text line-numbers-mode","data-ext":"text"},[a("pre",{class:"language-text"},[a("code",null,`tar -zxvf jdk-17_linux-x64_bin.tar.gz
`)]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),w=a("p",null,"3）配置环境",-1),j=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token number"},"1"),s(`. 执行vim /etc/profile 在末尾添加如下配置并保存
   `),a("span",{class:"token assign-left variable"},"JAVA_HOME"),a("span",{class:"token operator"},"="),s(`/usr/local/jdk-17.0.8
   `),a("span",{class:"token assign-left variable"},[a("span",{class:"token environment constant"},"PATH")]),a("span",{class:"token operator"},"="),a("span",{class:"token variable"},"$JAVA_HOME"),s("/bin:"),a("span",{class:"token environment constant"},"$PATH"),s(`

`),a("span",{class:"token number"},"2"),s(`. 重新加载配置文件，命令为：source /etc/profile
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),q=a("p",null,"4）测试",-1),A=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[s("检查安装是否成功，命令为：java "),a("span",{class:"token parameter variable"},"-version"),s(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),z=a("figure",null,[a("img",{src:"http://manufactory.ajplus.cn/blog/linux/ajplus_linux (22).png",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),E=a("br",null,null,-1),P=a("h3",{id:"_3-安装tomcat",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_3-安装tomcat","aria-hidden":"true"},"#"),s(),a("strong",null,"3. 安装tomcat")],-1),M={href:"https://tomcat.apache.org/download-10.cgi",target:"_blank",rel:"noopener noreferrer"},N=p(`<figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (23).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>2）解压</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>tar -zxvf apache-tomcat-10.1.12.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3） /usr/local/文件夹下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> apache-tomcat-10.1.12/bin

<span class="token function">sh</span> startup.sh或者./startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (24).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>4）检查启动状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> tomcat  //检查启动状态
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (25).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>5）防火墙打开端口8080</p><p>注意：腾讯云应提前开放8080端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>①. 先开启系统防火墙
systemctl start firewalld

②. 再开放8080端口号
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">8080</span>/tcp <span class="token parameter variable">--permanent</span>

③. 重新加载防火墙
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6）打开网页测试</p><figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (26).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>操作</th><th>指令</th><th>备注</th></tr></thead><tbody><tr><td>查看防火墙状态</td><td><code>systemctl status firewalld / firewall-cmd --state</code></td><td></td></tr><tr><td>暂时关闭防火墙</td><td><code>systemctl stop firewalld</code></td><td></td></tr><tr><td>永久关闭防火墙(禁用开机自启)</td><td><code>systemctl disable firewalld</code></td><td><mark>下次启动,才生效</mark></td></tr><tr><td>暂时开启防火墙</td><td><code>systemctl start firewalld</code></td><td></td></tr><tr><td>永久开启防火墙(启用开机自启)</td><td><code>systemctl enable firewalld</code></td><td><mark>下次启动,才生效</mark></td></tr><tr><td>开放指定端口</td><td><code>firewall-cmd --zone=public --add-port=8080/tcp --permanent</code></td><td><mark>需要重新加载生效</mark></td></tr><tr><td>关闭指定端口</td><td><code>firewall-cmd --zone=public --remove-port=8080/tcp --permanent</code></td><td><mark>需要重新加载生效</mark></td></tr><tr><td>立即生效(重新加载)</td><td><code>firewall-cmd --reload</code></td><td></td></tr><tr><td>查看开放端口</td><td><code>firewall-cmd --zone=public --list-ports</code></td><td></td></tr></tbody></table><blockquote><p>注意：</p><p>​ A. systemctl是管理Linux中服务的命令，可以对服务进行启动、停止、重启、查看状态等操作</p><p>​ B. firewall-cmd是Linux中专门用于控制防火墙的命令</p><p>​ C. 为了保证系统安全，服务器的防火墙不建议关闭</p></blockquote><br><h3 id="_4-安装git" tabindex="-1"><a class="header-anchor" href="#_4-安装git" aria-hidden="true">#</a> <strong>4. 安装git</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum list <span class="token function">git</span>			列出git安装包
yum <span class="token function">install</span> <span class="token function">git</span>			在线安装git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_5-安装maven" tabindex="-1"><a class="header-anchor" href="#_5-安装maven" aria-hidden="true">#</a> <strong>5. 安装maven</strong></h3><p>1）下载</p>`,22),S={href:"https://maven.apache.org/download.cgi",target:"_blank",rel:"noopener noreferrer"},T=p(`<figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (27).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>2）解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-maven-3.9.4-bin.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3）配置环境</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>. 执行vim /etc/profile 在末尾添加如下配置
   <span class="token assign-left variable">MAVEN_HOME</span><span class="token operator">=</span>/usr/local/maven/apache-maven-3.9.4
   <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">\${<span class="token environment constant">PATH</span>}</span><span class="token builtin class-name">:</span><span class="token variable">\${MAVEN_HOME}</span>/bin

<span class="token number">2</span>. 重新加载配置文件，命令为：source /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4）验证</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5）修改settings.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 本地仓库路径--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">&gt;</span></span>/usr/local/maven/mvn-rep<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!--阿里云镜像--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>aliyunmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>阿里云公共仓库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>        
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_6-安装mysql" tabindex="-1"><a class="header-anchor" href="#_6-安装mysql" aria-hidden="true">#</a> <strong>6. 安装Mysql</strong></h3><p>1）新建文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> usr/local//mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）进入mysql目录下载安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/mysql
<span class="token function">wget</span> https://dev.mysql.com/get/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3）解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4）查看并删除系统自带数据库 mariadb</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查询</span>
yum list installed <span class="token operator">|</span> <span class="token function">grep</span> mariadb

<span class="token comment"># 删除</span>
<span class="token function">rpm</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">--nodeps</span> mariadb-connector-c-3.1.11-2.oc8.1.x86_64
<span class="token function">rpm</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">--nodeps</span> mariadb-connector-c-config-3.1.11-2.oc8.1.noarch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5）安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-common-5.7.26-1.el7.x86_64.rpm
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-libs-5.7.26-1.el7.x86_64.rpm
yum <span class="token function">install</span> libncurses*
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-client-5.7.26-1.el7.x86_64.rpm

<span class="token comment"># yum install perl net-tools</span>
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-server-5.7.26-1.el7.x86_64.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将安装 MySQL 5.7.26 版本的通用库、客户端库、客户端工具和服务器；其他的包（如 <code>mysql-community-devel</code> 和 <code>mysql-community-libs-compat</code>）是用于开发和向后兼容性的，如果你不需要这些功能，就不需要安装它们</p><p>6）启动并测试连接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#启动</span>
systemctl start mysqld.service

<span class="token comment">#查看进程</span>
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7）查看临时密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /var/log/mysqld.log

<span class="token number">2023</span>-08-19T06:14:42.230234Z <span class="token number">1</span> <span class="token punctuation">[</span>Note<span class="token punctuation">]</span> A temporary password is generated <span class="token keyword">for</span> root@localhost: zm4d<span class="token punctuation">(</span>K:rjlwu 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>8）进入修改密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span>

SET PASSWORD FOR <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> <span class="token operator">=</span> PASSWORD<span class="token punctuation">(</span><span class="token string">&#39;新密码&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>9）使用Navicate远程连接</p><ul><li><p>进入数据库修改user表中ip地址</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> mysql<span class="token punctuation">;</span>

<span class="token comment"># 查询</span>
<span class="token keyword">SELECT</span> Host<span class="token punctuation">,</span> <span class="token keyword">User</span><span class="token punctuation">,</span> authentication_string <span class="token keyword">FROM</span> mysql<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">;</span>

<span class="token comment"># 更新</span>
<span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> Host<span class="token operator">=</span><span class="token string">&#39;%&#39;</span> <span class="token keyword">WHERE</span> <span class="token keyword">User</span><span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>

<span class="token comment"># 刷新</span>
flush <span class="token keyword">privileges</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>navicate连接</p></li></ul><br><h3 id="_7-添加自动部署脚本" tabindex="-1"><a class="header-anchor" href="#_7-添加自动部署脚本" aria-hidden="true">#</a> <strong>7. 添加自动部署脚本</strong></h3><p>1）生成仓库公钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 设置邮箱号生成密钥</span>
ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;邮箱号&quot;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>连击三次,生成密钥</p><p>2）查看密钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> ~/.ssh/id_rsa.pub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (30).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>3）生成密钥添加到仓库公钥</p><figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (29).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>1）进入目录首次拉取git</p><figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (31).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd /usr/local/
git clone git@gitee.com:plusjia/ajplus_bank.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2）编写start.sh脚本文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token builtin class-name">echo</span>  自动化部署脚本启动
<span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>

<span class="token builtin class-name">echo</span> 停止原来运行中的工程
<span class="token assign-left variable">APP_NAME</span><span class="token operator">=</span>ajplus_bank

<span class="token assign-left variable">tpid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> $APP_NAME<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span><span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">kill</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">\${tpid}</span> <span class="token punctuation">]</span>；then
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;Stop Process...&#39;</span>
    <span class="token function">kill</span> <span class="token parameter variable">-15</span> <span class="token variable">$tpid</span>
<span class="token keyword">fi</span>
<span class="token function">sleep</span> <span class="token number">2</span>
<span class="token assign-left variable">tpid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> $APP_NAME<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span><span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">kill</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">\${tpid}</span> <span class="token punctuation">]</span>；then
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;Kill Process!&#39;</span>
    <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$tpid</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;Stop Success!&#39;</span>
<span class="token keyword">fi</span>

<span class="token builtin class-name">echo</span> 准备从Git仓库拉取最新代码
<span class="token builtin class-name">cd</span> /usr/local/AJPlus/ajplus_bank

<span class="token builtin class-name">echo</span> 开始从Git仓库拉取最新代码
<span class="token function">git</span> pull

<span class="token builtin class-name">echo</span> 代码拉取完成

<span class="token builtin class-name">echo</span> 开始打包
<span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>mvn clean package<span class="token variable">\`</span></span>

<span class="token builtin class-name">cd</span> target

<span class="token builtin class-name">echo</span> 启动项目
<span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> ajplus_bank.jar <span class="token operator">&amp;&gt;</span> ajplus_bank.log <span class="token operator">&amp;</span>
<span class="token builtin class-name">echo</span> 项目启动完成
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3）修改权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">777</span> start.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>chmod命令可以使用八进制数来指定权限(0 - 代表无 , 1 - 执行x , 2 - 写w , 4 - 读r)</p><table><thead><tr><th>值</th><th>权限</th><th>rwx</th></tr></thead><tbody><tr><td>7</td><td>读 + 写 + 执行</td><td>rwx</td></tr><tr><td>6</td><td>读 + 写</td><td>rw-</td></tr><tr><td>5</td><td>读 + 执行</td><td>r-x</td></tr><tr><td>4</td><td>只读</td><td>r--</td></tr><tr><td>3</td><td>写 + 执行</td><td>-wx</td></tr><tr><td>2</td><td>只写</td><td>-w-</td></tr><tr><td>1</td><td>只执行</td><td>--x</td></tr><tr><td>0</td><td>无</td><td>---</td></tr></tbody></table><p>4）启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./start.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h3 id="_8-安装docker" tabindex="-1"><a class="header-anchor" href="#_8-安装docker" aria-hidden="true">#</a> <strong>8. 安装Docker</strong></h3>`,53),$={href:"https://blog.csdn.net/qq_52915639/article/details/132196965",target:"_blank",rel:"noopener noreferrer"},H=p(`<br><h3 id="_9-安装nginx" tabindex="-1"><a class="header-anchor" href="#_9-安装nginx" aria-hidden="true">#</a> <strong>9. 安装Nginx</strong></h3><p>1）yum安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）进入安装完成后的nginx目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3）启动Nginx</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4）浏览器测试（记得开80端口）</p><figure><img src="http://manufactory.ajplus.cn/blog/linux/ajplus_linux (32).png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_10-安装jenkins" tabindex="-1"><a class="header-anchor" href="#_10-安装jenkins" aria-hidden="true">#</a> <strong>10. 安装Jenkins</strong></h3><p>1）更新系统软件包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum update <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><p>2）添加Jenkins RPM仓库：<br> 如果没有默认仓库包含Jenkins，你可以添加官方仓库。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 导入镜像</span>
<span class="token function">sudo</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat-stable/jenkins.repo

<span class="token comment"># 导入公钥</span>
<span class="token function">sudo</span> <span class="token function">rpm</span> <span class="token parameter variable">--import</span> http://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p>3）检查公钥是否安装成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">rpm</span> <span class="token parameter variable">-q</span> gpg-pubkey <span class="token parameter variable">--qf</span> <span class="token string">&#39;%{name}-%{version}-%{release} --&gt; %{summary}\\n&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><p>4）安装Jenkins：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> jenkins <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><p>5）启动Jenkins并设置开机自启：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start jenkins
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><p>6）配置防火墙端口（如果适用）：<br> 如果你需要通过特定端口访问Jenkins，并且有防火墙限制，请开放端口（默认为8080）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token number">8080</span>/tcp
<span class="token function">sudo</span> firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><p>7）初始化Jenkins：<br> 首次启动后，打开浏览器访问 <code>http://your_server_ip:8080</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看密码</span>
<span class="token function">cat</span> /var/lib/jenkins/secrets/initialAdminPassword
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br>`,32);function J(O,R){const e=c("ExternalLinkIcon"),r=c("Tabs");return d(),u("div",null,[m,a("p",null,[s("官网地址："),a("a",b,[s("https://www.hostbuf.com/"),n(e)])]),k,g,n(r,{id:"10",data:[{id:"1 在线安装"},{id:"2 压缩包安装"}]},{title0:t(({value:l,isActive:i})=>[s("1 在线安装")]),title1:t(({value:l,isActive:i})=>[s("2 压缩包安装")]),tab0:t(({value:l,isActive:i})=>[h]),tab1:t(({value:l,isActive:i})=>[a("p",null,[s("1）"),a("a",f,[s("jdk17下载地址"),n(e)])]),x,_,y,w,j,q,A,z]),_:1}),E,P,a("p",null,[s("1）"),a("a",M,[s("tomcat下载地址"),n(e)])]),N,a("p",null,[a("a",S,[s("maven下载地址"),n(e)])]),T,a("p",null,[a("a",$,[s("安装Docker"),n(e)])]),H])}const L=o(v,[["render",J],["__file","index.html.vue"]]);export{L as default};
